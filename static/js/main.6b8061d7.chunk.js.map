{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","keyCode","handleKeyDown","event","setState","code","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAKaA,EAAb,4MACEC,MAAQ,CACNC,QAAS,IAFb,EAaEC,cAAgB,SAACC,GACf,EAAKC,SAAS,CAAEH,QAASE,EAAME,QAdnC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,iBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,iBAV/C,oBAiBE,WACE,IAAQD,EAAYO,KAAKR,MAAjBC,QAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGT,EAAO,mCAA+BA,EAA/B,KAA4C,kCAvB9D,GAAyBU,IAAMC,W,MCA/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.6b8061d7.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  keyCode: string\n};\nexport class App extends React.Component<{}, State> {\n  state = {\n    keyCode: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyDown);\n  }\n\n  handleKeyDown = (event: KeyboardEvent) => {\n    this.setState({ keyCode: event.code });\n  };\n\n  render() {\n    const { keyCode } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {keyCode ? `The last pressed key is [${keyCode}]` : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}