{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","keyCode","handleKeyDown","event","setState","code","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAKaA,EAAb,4MACEC,MAAQ,CACNC,QAAS,2BAFb,EAaEC,cAAgB,SAACC,GACf,EAAKC,SAAS,CAAEH,QAAQ,4BAAD,OAA8BE,EAAME,KAApC,QAd3B,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,iBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,iBAV/C,oBAiBE,WACE,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGF,KAAKR,MAAMC,gBArBtB,GAAyBU,IAAMC,W,MCA/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.eda31ff6.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  keyCode: string\n};\nexport class App extends React.Component<{}, State> {\n  state = {\n    keyCode: 'Nothing was pressed yet',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyDown);\n  }\n\n  handleKeyDown = (event: KeyboardEvent) => {\n    this.setState({ keyCode: `The last pressed key is [${event.code}]` });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {this.state.keyCode}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}